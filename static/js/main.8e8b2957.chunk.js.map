{"version":3,"sources":["components/desktopBox.jsx","components/mainPage.jsx","images/flowkat-logo1.png","images/spining_flowkat.gif","components/socialMedia.jsx","components/iconBox.jsx","components/iconText.jsx","components/desktopIcons.jsx","components/layoutStyling.js","components/releasenote.jsx","images/faker_flowkat.png","components/characterdesign.jsx","components/makers.jsx","components/yeonmu.jsx","components/desktop.jsx","App.js","serviceWorker.js","index.js"],"names":["Box","styled","div","alignItems","display","justifyContent","flexDirection","padding","Page","_ref","children","description","title","React","createElement","Fragment","as","socialMedia","name","url","IconBox","marginBottom","IconText","p","marginTop","width","textAlign","breakAfter","wordBreak","color","Shortcuts","openReleaseNote","openCharacterDesign","openMakers","openYeonmu","ThemeProvider","GlobalStyle","className","onClick","Msrating106","variant","Explorer103","Winpopup3","User","section","_templateObject","_taggedTemplateLiteral","layoutMain","Modal","_templateObject2","media","lessThan","_templateObject3","props","isMobile","css","_templateObject4","layoutMainContent","Frame","_templateObject5","_templateObject6","textModal","_templateObject7","ReleaseNote","closeReleaseNote","S","closeModal","height","icon","menu","list","List","Item","bg","boxShadow","CharacterDesign","closeCharacterDesign","align","src","FlowKat_Faker","alt","class","Makers","closeMakers","style","Yeonmu","closeYeonmu","Desktop","test","navigator","userAgent","items","useState","showAboutModal","setShowAboutModal","handleOpenAboutModal","useCallback","handleCloseAboutModal","showReleaseNoteModal","setShowReleaseNoteModal","showCharacterDesignModal","setShowCharacterDesignModal","handleOpenCharacterDesignModal","handleCloseCharacterDesignModal","showMakersModal","setShowMakersModal","showYeonmuModal","setShowYeonmuModal","showManualModal","setShowManualModal","handleOpenManualModal","handleCloseManualModal","rnOpened","toggleReleaseNote","cdOpened","toggleCharacterDesign","mkOpened","toggleMakers","ymOpened","toggleYeonmu","theme","ComputerFind","FlowKat_Logo","margin","FlowKat_Bing","Mspaint","ProgressBar","percent","TaskBar","href","Mail","target","Divider","Network3","map","key","rel","Home","DesktopIcons","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e8b2957.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Box = styled.div({\r\n  alignItems: \"flex-start\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  flexDirection: \"column\",\r\n  padding: 8,\r\n});\r\n\r\nexport default Box;\r\n","import React from 'react';\r\nimport \"./styles.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"./desktopBox\";\r\n\r\nconst PageProps = {\r\n  children: PropTypes.node.isRequired,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nconst Page = ({ children, description = null, title = \"FlowKat\" }) => (\r\n  <>\r\n    <Box as=\"main\">{children}</Box>\r\n  </>\r\n);\r\n\r\nPage.propTypes = PageProps;\r\n\r\nexport default Page;\r\n","export default __webpack_public_path__ + \"static/media/flowkat-logo1.47da2cfc.png\";","export default __webpack_public_path__ + \"static/media/spining_flowkat.e243bc4c.gif\";","const socialMedia = [\r\n  {\r\n    name: \"FlowKat\",\r\n    url: \"https://flowkat.papercraft.dev/\",\r\n  },\r\n  {\r\n    name: \"Github\",\r\n    url: \"https://github.com/papercraft-projects/\",\r\n  },\r\n  {\r\n    name: \"Homepage\",\r\n    url: \"https://flowkat.yeonmu.dev\",\r\n  },\r\n];\r\n\r\nexport default socialMedia;\r\n","import styled from \"styled-components\";\r\n\r\nimport Box from \"./desktopBox\";\r\n\r\nconst IconBox = styled(Box)({\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  marginBottom: 20,\r\n});\r\n\r\nexport default IconBox;\r\n","import styled from \"styled-components\";\r\n\r\nconst IconText = styled.p({\r\n  marginTop: 6,\r\n  alignItems: \"flex-start\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  width: 100,\r\n  textAlign: \"center\",\r\n  breakAfter: \"auto\",\r\n  wordBreak: \"break-all\",\r\n  color: \"black\",\r\n});\r\n\r\nexport default IconText;\r\n","import React from \"react\";\r\nimport { GlobalStyle, ThemeProvider } from \"@react95/core\";\r\nimport IconBox from \"./iconBox\";\r\nimport IconText from \"./iconText\";\r\nimport \"./styles.scss\";\r\nimport { Winpopup3, Explorer103, CdMusic, User, Msrating106 } from \"@react95/icons\";\r\n\r\nfunction Shortcuts({ openReleaseNote, openCharacterDesign, openMakers, openYeonmu }) {\r\n  return (\r\n    <div>\r\n      <ThemeProvider>\r\n        <GlobalStyle></GlobalStyle>\r\n        <IconBox className=\"pointer\" onClick={() => openYeonmu()}>\r\n          <Msrating106 className=\"pointer\" variant=\"32x32_4\" />\r\n          <IconText className=\"pointer\">연무기술.txt</IconText>\r\n        </IconBox>\r\n        <IconBox className=\"pointer\" onClick={() => openReleaseNote()}>\r\n          <Explorer103 className=\"pointer\" variant=\"32x32_4\" />\r\n          <IconText className=\"pointer\">ReleaseNote.txt</IconText>\r\n        </IconBox>\r\n        <IconBox className=\"pointer\" onClick={() => openCharacterDesign()}>\r\n          <Winpopup3 className=\"pointer\" variant=\"32x32_4\" />\r\n          <IconText className=\"pointer\">Character.txt</IconText>\r\n        </IconBox>\r\n        <IconBox className=\"pointer\" onClick={() => openMakers()}>\r\n          <User className=\"pointer\" variant=\"32x32_4\" />\r\n          <IconText className=\"pointer\">Makers.txt</IconText>\r\n        </IconBox>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Shortcuts;\r\n","import styled, { css } from \"styled-components\";\r\nimport media from \"styled-media-query\";\r\nimport { Modal, Frame } from \"@react95/core\";\r\n\r\nexport const layoutWrapper = styled.section``;\r\n\r\nexport const layoutMain = styled(Modal)`\r\n  display: flex;\r\n  margin: 0 10rem 10rem 10rem;\r\n  width: 80vh;\r\n  ${media.lessThan(\"medium\")`\r\n    flex-direction: column;\r\n    margin: 1rem 1rem 0 0.5rem;\r\n    top: 0;\r\n    width: fill-available;\r\n  `}\r\n  ${(props) =>\r\n    props.isMobile &&\r\n    css`\r\n      top: 0;\r\n    `}\r\n`;\r\n\r\nexport const layoutMainContent = styled(Frame)`\r\n  overflow-y: auto;\r\n  max-height: 70vh;\r\n  margin: auto;\r\n  ${media.lessThan(\"large\")`\r\n  max-height: 70vh;\r\n  `}\r\n`;\r\n\r\nexport const textModal = styled(Frame)`\r\n  background: #fff;\r\n  boxshadow: in;\r\n  height: 100%;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n`;\r\n","import React from \"react\";\r\nimport { List } from \"@react95/core\";\r\nimport { Explorer103 } from \"@react95/icons\";\r\nimport * as S from \"./layoutStyling\";\r\nimport \"./releasenotecss.scss\"\r\n\r\n\r\nfunction ReleaseNote({ closeReleaseNote, isMobile }) {\r\n  return (\r\n    <S.layoutMain\r\n      isMobile={isMobile}\r\n      title={\"Release_Note.txt\"}\r\n      closeModal={closeReleaseNote}\r\n      height=\"100%\"\r\n      icon={<Explorer103 variant=\"16x16_4\" />}\r\n      menu={[\r\n        {\r\n          name: \"Options\",\r\n          list: (\r\n            <List>\r\n              <List.Item onClick={closeReleaseNote}>Close</List.Item>\r\n            </List>\r\n          ),\r\n        },\r\n      ]}\r\n    >\r\n      <S.layoutMainContent bg=\"white\" boxShadow=\"in\">\r\n        <S.textModal>\r\n            <div className=\"full-screen\">\r\n                <h1>FlowKat v5.0.0 Build 183</h1>\r\n                <b>릴리스 날짜: 2024.4.29</b>\r\n\r\n                <p>대시보드 서버는 수집 서버 시간 조회 기능 때문에 이전 릴리스 된 API 서버, 수집 서버와 호환되지 않습니다.</p>\r\n\r\n                <h2>수집 서버</h2>\r\n                <ul>\r\n                    <li>\r\n                        <p><b className=\"feature-text\">Feature</b> 성능 카운터 캐쉬에 수집 시점 시간 정보 추가</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"change-text\">Change</b> XLOG 프로파일 검색 최대 개수 500개에서 5,000개로 수정</p>\r\n                    </li>\r\n                </ul>\r\n                <h2>API 서버</h2>\r\n                <ul>\r\n                    <li>\r\n                        <p><b className=\"feature-text\">Feature</b> 수집 서버 시간 조회 하는 API 추가</p>\r\n                    </li>\r\n                </ul>\r\n                <h2>대시보드 서버</h2>\r\n                <ul>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [실시간 > 대시보드] 액티브 스피드 바 클릭시 오브젝트 조회 대상이 모니터링 중인 대상과 상이하게 나오는 현상 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [실시간 > 대시보드] 방문자 수, 이번주 방문자 수, 일일 방문자 수 오브젝트 별 필터링 안되는 현상 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [실시간 > 대시보드] XLOG 새로 고침 클릭 시 이전 데이터와 중복 되어 나오는 현상 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [실시간 > 대시보드] 브라우저에서 URL를 /workspace 입력시 화면이 빈페이지에서 나오는 현상 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [실시간 > 대시보드] API 서버 다운 또는 수집 서버 다운 발생시 XLOG 조회 오류 메세지 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [실시간 > 대시보드] API 서버 다운 또는 수집 서버 다운 발생시 액티브 서비스 조회 오류 메세지 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"fixed-text\">Fixed</b> [설정 > 사용자 관리] 권한 수정시 수집 서버 ID 가 변경 될 경우 전체가 선택 되는 현상 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"change-text\">Change</b> 대시보드 다운 발생 시 1분이내 복구가 안되면 강제 로그 아웃 되도록 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"change-text\">Change</b> 대시보드 사용자 인증 토큰 시간 만료 여부 대시보드 서버 시간 기준 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"change-text\">Change</b> 대시보드 차트 데이터 조회 시 수집 서버 시간 기준 표시하고 데이터를 가져올 수 있도록 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"change-text\">Change</b> XLOG 프로파일 조회 최대 개수 기존 200개에서 5,000개로 수정</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"feature-text\">Feature</b> XLOG 프로파일 조회 화면에서 TOP-N,에러 필터 버튼 추가</p>\r\n                    </li>\r\n                    <li>\r\n                        <p><b className=\"feature-text\">Feature</b> 계정 패스워드 초기화 Command Line Tool 추가</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </S.textModal>\r\n      </S.layoutMainContent>\r\n    </S.layoutMain>\r\n  );\r\n}\r\n\r\nexport default ReleaseNote;\r\n","export default __webpack_public_path__ + \"static/media/faker_flowkat.9d19c2e6.png\";","import React from \"react\";\r\nimport { List } from \"@react95/core\";\r\nimport { Winpopup3, User } from \"@react95/icons\";\r\nimport * as S from \"./layoutStyling\";\r\nimport FlowKat_Faker from \"../images/faker_flowkat.png\";\r\n\r\nfunction CharacterDesign({ closeCharacterDesign, isMobile }) {\r\n  return (\r\n    <S.layoutMain\r\n      isMobile={isMobile}\r\n      title={\"Character_Design.txt\"}\r\n      closeModal={closeCharacterDesign}\r\n      height=\"100%\"\r\n      icon={<Winpopup3 variant=\"16x16_4\" />}\r\n      menu={[\r\n        {\r\n          name: \"Options\",\r\n          list: (\r\n            <List>\r\n              <List.Item onClick={closeCharacterDesign}>Close</List.Item>\r\n            </List>\r\n          ),\r\n        },\r\n      ]}\r\n    >\r\n      <S.layoutMainContent bg=\"white\" boxShadow=\"in\">\r\n        <S.textModal>\r\n          <h1>MSI 2024 Fighting!!</h1>\r\n            <div align=\"center\">\r\n                  <img\r\n                    src={FlowKat_Faker}\r\n                    aria-hidden\r\n                    alt=\"페이커 빙의\"\r\n                    class=\"full-width-image\"\r\n                  ></img>\r\n            </div>\r\n                <div align=\"center\" class=\"image-text\">\r\n                  <p>모든트래픽은저를통합니다.png</p>\r\n                </div>\r\n                Everything okay, my man?\r\n                Turn the music up\r\n                Mm, we're not going home tonight, alright\r\n                네 계획에 없던 party\r\n                Up and down, round and round\r\n                Hit the spot, spot, spot, spot\r\n                엎치락뒤치락 정신을 왜 차려? 왜?\r\n                Hey, girl, where you at?\r\n                데리러 갈게 send me the address (hey)\r\n                No dress code 대충 걸치면 돼\r\n                우린 꾸밈없고, 나머진 억텐 (yeah)\r\n                농익은 분위기 it's too sticky (sticky)\r\n                마구 부대껴, 어머! 정전기 찌릿 (찌릿)\r\n                여긴 내 동생 저기는 내 homie (what's up?)\r\n                순둥이지만 음악 틀면 눈 돌지\r\n                Chillin' out, we yellin' out, one more\r\n                찐친 vibe 위아래 안 따져\r\n                부끄런 I 피식 E를 드러내\r\n                포위됐어 넌, now hands in the air\r\n                Mm, we're not going home tonight, alright\r\n                네 계획에 없던 party\r\n                Up and down, round and round\r\n                Hit the spot, spot, spot, spot\r\n                엎치락뒤치락 정신을 왜 차려? 왜?\r\n                Up and down, round and round\r\n                Everybody, hit the spot\r\n                Up and down, round and round\r\n                Everybody, hit the top\r\n                Up and down, round and round\r\n                Everybody, make it loud\r\n                Up and down, round and round\r\n                Ain't nobody hold us down\r\n                어깨 툭툭 he say, \"Yo, JENNIE\r\n                Told you that 도망치면 배신\"\r\n                Yeah, I know, I know\r\n                일단 더우니까 바람 쐬러 나가\r\n                Bae, 나갈 때 뒤로 딱 붙어\r\n                땀 뺐으니까 후딱 ice cream, go\r\n                들키면 피곤해져, put your mask on\r\n                한바퀴 돌고 퀵하게 조인해 (ah)\r\n                우리 프로젝트 타이틀 명은 \"J-Z\"\r\n                We gon' run this town, that's crazy (uh)\r\n                짱박아 놨던 네 똘끼를 꺼내, huh\r\n                해방됐어 넌, now hands in the air\r\n                Mm, we're not going home tonight, alright\r\n                네 계획에 없던 party\r\n                Up and down, round and round\r\n                Hit the spot, spot, spot, spot\r\n                엎치락뒤치락 정신을 왜 차려? 왜?\r\n                Up and down, round and round\r\n                Everybody, hit the spot\r\n                Up and down, round and round\r\n                Everybody, hit the top\r\n                Up and down round and round\r\n                Everybody, make it loud\r\n                Up and down, round and round\r\n                Everybody, stop, wait a minute, ow\r\n                Hey, hey\r\n                Yeah, come vibe with us, ride with us (hey)\r\n                Hey, hey\r\n                Hey\r\n        </S.textModal>\r\n      </S.layoutMainContent>\r\n    </S.layoutMain>\r\n  );\r\n}\r\n\r\nexport default CharacterDesign;\r\n","import React from \"react\";\r\nimport { Frame, List } from \"@react95/core\";\r\nimport { Winpopup3, User } from \"@react95/icons\";\r\nimport * as S from \"./layoutStyling\";\r\n\r\nfunction Makers({ closeMakers, isMobile }) {\r\n  return (\r\n    <S.layoutMain\r\n      isMobile={isMobile}\r\n      title={\"Makers\"}\r\n      closeModal={closeMakers}\r\n      height=\"100%\"\r\n      icon={<User variant=\"16x16_4\" />}\r\n      menu={[\r\n        {\r\n          name: \"Options\",\r\n          list: (\r\n            <List>\r\n              <List.Item onClick={closeMakers}>Close</List.Item>\r\n            </List>\r\n          ),\r\n        },\r\n      ]}\r\n    >\r\n      <Frame\r\n        boxShadow=\"none\"\r\n        style={{\r\n          height: \"352px\",\r\n        }}\r\n      >\r\n      <h1>여기에는 FlexBox 사용해보겠습니다.</h1>\r\n      https://d2.naver.com/helloworld/8540176\r\n      <div>\r\n       장승환 차장\r\n\r\n           주요 업무: FlowKat 총괄\r\n           업무 상세:\r\n               제품 납품\r\n               고객 응대\r\n               업무 보고\r\n               일정 관리\r\n               기술 지원\r\n               업무 협의\r\n               제품 기획 및 프로토타입 제작\r\n       </div>\r\n       <div>\r\n       허여송 차장\r\n\r\n           주요 업무: FlowKat 개발\r\n           업무 상세:\r\n               제품 기능 로드맵 관리\r\n               제품 릴리스 관리\r\n               제품 트러블 슈팅 관리\r\n               제품 데이터 수집 개발\r\n               제품 데이터 저장 개발\r\n               제품 데이터 연동 인터페이스 개발\r\n               제품 데이터 시각화 개발\r\n               제품 기술 지원 및 컨설팅\r\n        </div>\r\n        <div>\r\n       이향희 과장\r\n\r\n           주요 업무: FlowKat 디자인\r\n           업무 상세:\r\n               기획의 시각화\r\n               개발자와 협업하여 설계 및 구현\r\n               브랜드 가이드라인 수립\r\n               홍보 실행에 필요한 소재 제작\r\n               온/오프라인 브랜드 자산 고도화\r\n               상품 제작 및 판촉물 제작\r\n               인터페이스 디자인(설계)\r\n               디자인 시스템 구축\r\n               화면 단위 구성\r\n               개발도구를 이용한 웹 컨텐츠 관리\r\n        </div>\r\n      </Frame>\r\n    </S.layoutMain>\r\n  );\r\n}\r\n\r\nexport default Makers;\r\n","import React from \"react\";\r\nimport { Frame, List } from \"@react95/core\";\r\nimport { Msrating106, User } from \"@react95/icons\";\r\nimport * as S from \"./layoutStyling\";\r\n\r\nfunction Yeonmu({ closeYeonmu, isMobile }) {\r\n  return (\r\n    <S.layoutMain\r\n      isMobile={isMobile}\r\n      title={\"Yeonmu\"}\r\n      closeModal={closeYeonmu}\r\n      height=\"100%\"\r\n      icon={<Msrating106 variant=\"16x16_4\" />}\r\n      menu={[\r\n        {\r\n          name: \"Options\",\r\n          list: (\r\n            <List>\r\n              <List.Item onClick={closeYeonmu}>Close</List.Item>\r\n            </List>\r\n          ),\r\n        },\r\n      ]}\r\n    >\r\n      <Frame\r\n        boxShadow=\"none\"\r\n        style={{\r\n          height: \"352px\",\r\n        }}\r\n      >\r\n       연무기술 가로연 세로무\r\n      </Frame>\r\n    </S.layoutMain>\r\n  );\r\n}\r\n\r\nexport default Yeonmu;\r\n","/* 리액트에서 useState, useCallback 원자재 수입 */\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\n/* @react95/core로부터 글로벌스타일, 테마프로바이더, 리스트, 프레임, 프로그레스바, 태스크바 원자재 수입 */\r\nimport {\r\n  GlobalStyle,\r\n  ThemeProvider,\r\n  List,\r\n  Frame,\r\n  ProgressBar,\r\n  TaskBar,\r\n} from \"@react95/core\";\r\n\r\n/* 이미지 넣으려면 이렇게 해야되드라 */\r\nimport FlowKat_Logo from \"../images/flowkat-logo1.png\";\r\nimport FlowKat_Bing from \"../images/spining_flowkat.gif\";\r\n\r\n/* 수입 또 수입 */\r\nimport socialMedia from \"./socialMedia\";\r\nimport Shortcuts from \"./desktopIcons\";\r\nimport * as S from \"./layoutStyling\";\r\nimport \"./styles.scss\";\r\n\r\n/* @react95/icons에서 아이콘으로 쓸 것들 수입 */\r\nimport {\r\n  Progman37,\r\n  Mspaint,\r\n  User,\r\n  CdMusic,\r\n  Progman34,\r\n  Mail,\r\n  Main100,\r\n  ComputerFind,\r\n  Network3,\r\n  Winpopup3,\r\n} from \"@react95/icons\";\r\n\r\n/* 금산 인삼, 풍기 인견, 포항 과메기 수입 */\r\nimport ReleaseNote from \"./releasenote\";\r\nimport CharacterDesign from \"./characterdesign\";\r\nimport Makers from \"./makers\";\r\nimport Yeonmu from \"./yeonmu\";\r\n\r\n\r\n/* 데스크탑이라는 전체창에 대한 함수  */\r\nfunction Desktop() {\r\n  /* Mobile 감지해서 상태를 저장 */\r\n  const isMobile =\r\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n      navigator.userAgent\r\n    );\r\n\r\n/* 이건 아직 모르겠음 useState 깡통 만들어두는 듯. 어다가 쓰려나 */\r\n  const [items] = useState([]);\r\n\r\n  /* About Modal */\r\n  const [showAboutModal, setShowAboutModal] = useState(true);\r\n  const handleOpenAboutModal = useCallback(() => {\r\n    setShowAboutModal(true);\r\n  }, []);\r\n  const handleCloseAboutModal = useCallback(() => {\r\n    setShowAboutModal(false);\r\n  }, []);\r\n\r\n  /* Release Note Modal */\r\n  const [showReleaseNoteModal, setShowReleaseNoteModal] = useState(true);\r\n  const handleOpenReleaseNoteModal = useCallback(() => {\r\n    setShowReleaseNoteModal(true);\r\n  }, []);\r\n  const handleCloseReleaseNoteModal = useCallback(() => {\r\n    setShowReleaseNoteModal(false);\r\n  }, []);\r\n\r\n  /* Character Design Modal */\r\n  const [showCharacterDesignModal, setShowCharacterDesignModal] = useState(false);\r\n  const handleOpenCharacterDesignModal = useCallback(() => {\r\n    setShowCharacterDesignModal(true);\r\n  }, []);\r\n  const handleCloseCharacterDesignModal = useCallback(() => {\r\n    setShowCharacterDesignModal(false);\r\n  }, []);\r\n\r\n  /* Makers Modal */\r\n  const [showMakersModal, setShowMakersModal] = useState(false);\r\n  const handleOpenMakersModal = useCallback(() => {\r\n    setShowMakersModal(true);\r\n  }, []);\r\n  const handleCloseMakersModal = useCallback(() => {\r\n    setShowMakersModal(false);\r\n  }, []);\r\n\r\n    /* Yeonmu Modal */\r\n    const [showYeonmuModal, setShowYeonmuModal] = useState(false);\r\n    const handleOpenYeonmuModal = useCallback(() => {\r\n      setShowYeonmuModal(true);\r\n    }, []);\r\n    const handleCloseYeonmuModal = useCallback(() => {\r\n      setShowYeonmuModal(false);\r\n    }, []);\r\n\r\n  /* Manual Modal */\r\n  const [showManualModal, setShowManualModal] = useState(false);\r\n  const handleOpenManualModal = useCallback(() => {\r\n    setShowManualModal(true);\r\n  }, []);\r\n  const handleCloseManualModal = useCallback(() => {\r\n    setShowManualModal(false);\r\n  }, []);\r\n\r\n  /* Release Note Shortcut */\r\n  const closeReleaseNote = () => {\r\n    toggleReleaseNote(false);\r\n  };\r\n\r\n  const openReleaseNote = () => {\r\n    toggleReleaseNote(true);\r\n  };\r\n  const [rnOpened, toggleReleaseNote] = useState(false);\r\n\r\n  /* Character Design Shortcut */\r\n\r\n  const closeCharacterDesign = () => {\r\n    toggleCharacterDesign(false);\r\n  };\r\n\r\n  const openCharacterDesign = () => {\r\n    toggleCharacterDesign(true);\r\n  };\r\n\r\n  const [cdOpened, toggleCharacterDesign] = useState(false);\r\n\r\n  /* Makers Shortcut */\r\n\r\n  const closeMakers = () => {\r\n    toggleMakers(false);\r\n  };\r\n\r\n  const openMakers = () => {\r\n    toggleMakers(true);\r\n  };\r\n\r\n  const [mkOpened, toggleMakers] = useState(false);\r\n\r\n  /* Yeonmu Shortcut */\r\n\r\n  const closeYeonmu = () => {\r\n    toggleYeonmu(false);\r\n  };\r\n\r\n  const openYeonmu = () => {\r\n    toggleYeonmu(true);\r\n  };\r\n\r\n\r\n  const [ymOpened, toggleYeonmu] = useState(false);\r\n\r\n/* 윈도우 데스크탑을 그려 보아요\u001f */\r\n\r\n  return (\r\n    <ThemeProvider theme=\"millenium\">\r\n      <GlobalStyle></GlobalStyle>\r\n      {showAboutModal && (\r\n        <S.layoutMain\r\n          isMobile={isMobile}\r\n          icon={<ComputerFind variant=\"16x16_4\" />}\r\n          title={\"About.txt\"}\r\n          closeModal={handleCloseAboutModal}\r\n          menu={[\r\n            {\r\n              name: \"Options\",\r\n              list: (\r\n                <List>\r\n                  <List.Item onClick={handleCloseAboutModal}>Close</List.Item>\r\n                </List>\r\n              ),\r\n            },\r\n          ]}\r\n        >\r\n          <S.layoutMainContent bg=\"white\" boxShadow=\"out\">\r\n            <S.textModal>\r\n              <h1>FlowKat!</h1>\r\n              <p>\r\n               FlowKat은 오픈소스 APM의 대표격인 스카우터 기반의 Java 애플리케이션 성능 관리 솔루션입니다.\r\n               스카우터가 가진 강력한 기능들은 사용성이 높은 웹으로 이식하고 사용자 편의와 분석 기능을 덧붙여 완성했습니다.\r\n               서비스 전반의 흐름을 수집하여 직관적이고 다양한 방법으로 사용자에게 새로운 모니터링 경험을 제공하려 노력하는 미어캣.\r\n               바로 플로우캣입니다.\r\n              </p>\r\n            <div align=\"center\">\r\n                  <img\r\n                    src={FlowKat_Logo}\r\n                    aria-hidden\r\n                    alt=\"귀여운 플로우캣 로고\"\r\n                    class=\"full-width-image\"\r\n                  ></img>\r\n            </div>\r\n                <div align=\"center\" class=\"image-text\">\r\n                  <p>flowkat_logo.png</p>\r\n\r\n                </div>\r\n            </S.textModal>\r\n          </S.layoutMainContent>\r\n        </S.layoutMain>\r\n      )}\r\n      {showCharacterDesignModal && (\r\n        <S.layoutMain\r\n          isMobile={isMobile}\r\n          title={\"flowkat design.jpeg\"}\r\n          closeModal={handleCloseCharacterDesignModal}\r\n          icon={<User variant=\"16x16_4\" />}\r\n          menu={[\r\n            {\r\n              name: \"Options\",\r\n              list: (\r\n                <List>\r\n                  <List.Item onClick={handleCloseCharacterDesignModal}>Close</List.Item>\r\n                </List>\r\n              ),\r\n            },\r\n          ]}\r\n        >\r\n          <Frame\r\n            boxShadow=\"none\"\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            <img\r\n              src={FlowKat_Bing}\r\n              aria-hidden\r\n              alt=\"BingBing FlowKat\"\r\n              class=\"full-width-image\"\r\n            ></img>\r\n          </Frame>\r\n          <div class=\"image-text\">\r\n            <p>spining-flowkat.gif</p>\r\n          </div>\r\n        </S.layoutMain>\r\n      )}\r\n      {showManualModal && (\r\n        <S.layoutMain\r\n          isMobile={isMobile}\r\n          closeModal={handleCloseManualModal}\r\n          height=\"100%\"\r\n          icon={<Mspaint variant=\"16x16_4\" />}\r\n          width={340}\r\n          menu={[\r\n            {\r\n              name: \"Options\",\r\n              list: (\r\n                <List>\r\n                  <List.Item onClick={handleCloseManualModal}>\r\n                    Close\r\n                  </List.Item>\r\n                </List>\r\n              ),\r\n            },\r\n          ]}\r\n          title=\"FlowKat_Quick_Guide.doc\"\r\n        >\r\n          <S.textModal>\r\n          <p>\r\n            <h1>스카우터 서버 기동/정지</h1>\r\n            <b>NOTE:</b> 스카우터 에이전트는 WAS에 플러그인 형태로 동작합니다. 일반적으로 WAS 기동/종료에 맞춰 자동으로 기동/종료됩니다.\r\n            <ProgressBar width={250} percent={75} />\r\n            <br />\r\n            - 기동\r\n            ```\r\n            # su - apm\r\n            [스카우터 수집 서버 기동]\r\n            $ cd /app/scouter/server\r\n            //TCP 6100, UDP 6100 포트 사용\r\n            $ ./startup.sh\r\n\r\n            [스카우터 API 서버 기동]\r\n            $ cd /app/scouter/webapp\r\n            TCP 6188 포트 사용\r\n            $ ./startup.sh\r\n\r\n            [FlowKat 서버 기동]\r\n            $ cd /app/flowkat/bin\r\n            TCP 8082 포트 사용\r\n            $ ./startup.sh\r\n            ```\r\n            - 정지\r\n            ```\r\n            # su - apm\r\n            [FlowKat 서버 종료]\r\n            $ cd /app/flowkat/bin\r\n            $ ./shutdown.sh\r\n\r\n            [스카우터 API 서버 종료]\r\n            $ cd /app/scouter/webapp\r\n            $ ./shutdown.sh\r\n\r\n            [스카우터 서버 종료]\r\n            $ cd /app/scouter/server\r\n            $ ./shutdown.sh\r\n            ```\r\n           </p>\r\n          </S.textModal>\r\n        </S.layoutMain>\r\n      )}\r\n      <TaskBar\r\n        list={\r\n          <List>\r\n            <List.Item\r\n              as=\"a\"\r\n              href=\"mailto:admin@papercraft.dev\"\r\n              icon={<Mail variant=\"32x32_4\" />}\r\n              target=\"_blank\"\r\n            >\r\n              &nbsp;Email me\r\n            </List.Item>\r\n            <List.Divider />\r\n            <List.Item icon={<Network3 variant=\"32x32_4\" />}>\r\n              Socials\r\n              <List>\r\n                {socialMedia.map(({ icon, name, url }) => (\r\n                  <List.Item\r\n                    as=\"a\"\r\n                    href={url}\r\n                    icon={icon}\r\n                    key={name}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    {name}\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </List.Item>\r\n            <List.Item\r\n              icon={<User variant=\"32x32_4\" />}\r\n              onClick={handleOpenCharacterDesignModal}\r\n            >\r\n              &nbsp;FlowKat\r\n            </List.Item>\r\n            <List.Item\r\n              icon={<Mspaint variant=\"32x32_4\" />}\r\n              onClick={handleOpenManualModal}\r\n            >\r\n              &nbsp;Manual\r\n            </List.Item>\r\n            <List.Divider />\r\n            <List.Item\r\n              icon={<ComputerFind variant=\"32x32_4\" />}\r\n              onClick={handleOpenAboutModal}\r\n            >\r\n              &nbsp;About\r\n            </List.Item>\r\n          </List>\r\n        }\r\n      />\r\n      <React.Fragment>\r\n        <Shortcuts\r\n          openReleaseNote={openReleaseNote}\r\n          openCharacterDesign={openCharacterDesign}\r\n          openMakers={openMakers}\r\n          openYeonmu={openYeonmu}\r\n        />\r\n        {rnOpened && (\r\n          <ReleaseNote\r\n            items={items}\r\n            closeReleaseNote={closeReleaseNote}\r\n            isMobile={isMobile}\r\n          />\r\n        )}\r\n        {cdOpened && <CharacterDesign items={items} closeCharacterDesign={closeCharacterDesign} isMobile={isMobile} />}\r\n        {mkOpened && (\r\n          <Makers items={items} closeMakers={closeMakers} isMobile={isMobile} />\r\n        )}\r\n        {ymOpened && (\r\n          <Yeonmu items={items} closeYeonmu={closeYeonmu} isMobile={isMobile} />\r\n        )}\r\n      </React.Fragment>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Desktop;","import React from \"react\";\r\nimport { GlobalStyle, ThemeProvider } from \"@react95/core\";\r\nimport Page from \"./components/mainPage\";\r\nimport Desktop from \"./components/desktop\";\r\nimport DesktopIcons from \"./components/desktopIcons\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <body class=\"background\">\r\n      <ThemeProvider>\r\n        <GlobalStyle />\r\n        <Page>\r\n          <Desktop>\r\n          {DesktopIcons}\r\n          </Desktop>\r\n        </Page>\r\n      </ThemeProvider>\r\n    </body>\r\n  );\r\n};\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}